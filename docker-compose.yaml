version: '3.8'

# =================================================================================
# == ĐỊNH NGHĨA CÁC ANCHOR DÙNG CHUNG ==
# =================================================================================

# Anchor cho các biến môi trường chung
x-airflow-common-environment: &airflow-common-environment
  # --- Cấu hình Airflow Core ---
  AIRFLOW__CORE__EXECUTOR: LocalExecutor
  AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
  AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL: '30'

  # --- Cấu hình kết nối và PYTHONPATH ---
  AIRFLOW_CONN_POSTGRES_PROD_DB: "postgresql+psycopg2://postgres_user:postgres_password@postgres_db:5432/prod_db"
  PYTHONPATH: "/opt/airflow/dags:/opt/airflow/config"

# Anchor cho các cấu hình chung (build, volumes)
x-airflow-common: &airflow-common
  build: .
  # Sử dụng anchor environment ở đây
  environment:
    <<: *airflow-common-environment
  volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow/logs:/opt/airflow/logs
    - ./airflow/plugins:/opt/airflow/plugins
    - ./config:/opt/airflow/config
    - ./airflow/data_exchange:/opt/airflow/data_exchange

# =================================================================================
# == ĐỊNH NGHĨA CÁC SERVICES ==
# =================================================================================
services:
  # 1. Database cho dữ liệu sản phẩm (Production DB)
  postgres_db:
    image: postgres:13
    container_name: postgres_db_container
    environment:
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_DB: prod_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres_user -d prod_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 2. Database cho siêu dữ liệu của Airflow (Metadata DB)
  postgres_airflow_meta:
    image: postgres:13
    container_name: postgres_airflow_meta_container
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - airflow_meta_volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d airflow"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 3. Service khởi tạo Airflow
  airflow-init:
    <<: *airflow-common
    container_name: airflow_init_container
    entrypoint: /bin/bash
    command:
      - -c
      - |
        airflow db init;
        airflow users create --role Admin --username admin --password admin --firstname Admin --lastname User --email admin@example.com;
        python /opt/airflow/config/setup_airflow.py;
    # Ghi đè biến môi trường để trỏ đến DB Metadata
    environment:
      <<: *airflow-common-environment
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: "postgresql+psycopg2://airflow:airflow@postgres_airflow_meta:5432/airflow"
    depends_on:
      postgres_airflow_meta:
        condition: service_healthy

  # 4. Scheduler của Airflow
  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow_scheduler_container
    command: scheduler
    # Ghi đè biến môi trường để trỏ đến DB Metadata
    environment:
      <<: *airflow-common-environment
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: "postgresql+psycopg2://airflow:airflow@postgres_airflow_meta:5432/airflow"
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    restart: always

  # 5. Webserver của Airflow
  airflow-webserver:
    <<: *airflow-common
    container_name: airflow_webserver_container
    command: webserver
    ports:
      - "8081:8080"
    # Ghi đè biến môi trường để trỏ đến DB Metadata
    environment:
      <<: *airflow-common-environment
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: "postgresql+psycopg2://airflow:airflow@postgres_airflow_meta:5432/airflow"
    depends_on:
      airflow-scheduler:
        condition: service_started
    restart: always

# =================================================================================
# == ĐỊNH NGHĨA VOLUMES ==
# =================================================================================
volumes:
  postgres_data_volume:
  airflow_meta_volume: